1. 프로세스

프로세스는 실행 중인 프로그램의 인스턴스를 의미한다. 각각의 프로세스는 코드, 데이터, 실행 상태 등을 포함하며, 독립적인 메모리 영역을 할당받아 작업을 수행한다. 

2. PCB

PCB는 프로세스에 대한 정보를 저장하는 데이터 구조다. 각 프로세스마다 하나의 PCB가 할당되며 프로세스의 상태, 레지스터 값, 프로세스 ID, 프로세스 우선순위, 할당된 자원 정보 등이 PCB에 저장된다. 운영체제는 PCB를 사용하여 프로세스를 관리하고 스케줄링을 수행한다. 

3. 프로세스 상태 다이어그램

프로세스 상태 다이어그램은 프로세스의 생명주기를 나타내며, 프로세스가 다양한 상태를 거치는 과정을 보여준다. 일반적으로 준비, 실행, 대기, 완료 상태로 이루어진다. 

4. 스레드

스레드는 프로세스 내에서 실행되는 독립적인 실행 단위를 의미한다. 하나의 프로세스 내에서 여러 개의 스레드가 동시에 실행될 수 있고, 스레드는 프로세스의 코드와 데이터를 공유하면서 독립적으로 실행될 수 있는 장점을 가지고 있다.

5. TCB

TCB는 스레드에 대한 정보를 저장하는 데이터 구조로, PCB와 비슷한 역할을 한다. 하나의 스레드마다 하나의 TCB가 할당되며, 스레드의 상태, 스레드 ID, 레지스터 값, 스케줄링 정보 등이 저장된다.

6. 스택

스택은 프로그램 실행 중에 함수 호출 및 복귀에 필요한 데이터를 저장하는 공간이다. 스택은 후입선출(LIFO) 원칙에 따라 동작하며, 함수 호출 시 지역 변수와 함수의 반환 주소 등을 저장한다.

7. 스택 프레임

스택 프레임은 함수가 호출될 때 스택에 저장되는 정보의 논리적 블록이다. 스택 프레임에는 함수의 매개변수, 지역 변수, 이전 스택 프레임으로 돌아가기 위한 정보 등이 포함된다.

8. 호출 규약

호출 규약은 함수 호출과 반환의 방식을 정의하는 규칙이다. 이 규약은 매개변수 전달, 반환 값 처리, 레지스터 사용 등을 다루며, 다양한 아키텍처와 컴파일러마다 다를 수 있다.

9. 네임 맹글링

네임 맹글링은 컴파일러가 함수나 변수의 이름을 고유한 형태로 변환하는 과정을 의미한. 이는 함수 오버로딩과 같은 기능을 지원하며, 다양한 컴파일러에 의해 다르게 처리될 수 있다.
